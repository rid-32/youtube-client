const webpack = require('webpack');
const merge = require('webpack-merge');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');

const common = require('./webpack.common.js');

const plugins = [
  new webpack.DefinePlugin({
    'process.env.DEVELOPMENT': false,
  }),
  new MiniCssExtractPlugin({
    filename: '[name].[hash].css',
  }),
  new CleanWebpackPlugin(),
];

const styleLoader = {
  test: /\.(s)?css$/,
  use: [
    MiniCssExtractPlugin.loader,
    {
      loader: '@teamsupercell/typings-for-css-modules-loader',
      options: {
        banner:
          '// autogenerated by typings-for-css-modules-loader. \n// Please do not change this file!',
        formatter: 'prettier',
      },
    },
    {
      loader: 'css-loader',
      options: {
        modules: {
          localIdentName: '[local]--[hash:base64:5]',
        },
        importLoaders: 1,
        localsConvention: 'camelCase',
      },
    },
  ],
};

module.exports = merge.smart(
  {
    mode: 'production',
    module: {
      rules: [styleLoader],
    },
    plugins,
  },
  common,
);
